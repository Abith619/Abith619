<?xml version="1.0" encoding="utf-8"?>
<!--
# Copyright 2017 - 2018 Modoolar <info@modoolar.com>
# License LGPLv3.0 or later (https://www.gnu.org/licenses/lgpl-3.0.en.html).
-->
<odoo noupdate="1">
    <record id="project_task_type_subtask" model="project.task.type2">
        <field name="name">Sub Task</field>
        <field name="description">A subtask that needs to be done..</field>
        <field name="icon" type="base64" file="project_agile/static/img/type-task.png"/>
        <field name="allow_sub_tasks" eval="False"/>
        <field name="allow_story_points" eval="False"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_task" model="project.task.type2">
        <field name="name">Task</field>
        <field name="description">A task that needs to be done.</field>
        <field name="icon" type="base64" file="project_agile/static/img/type-task.png"/>
        <field name="allow_sub_tasks" eval="True"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
        <field name="type_ids" eval="[
            (6, 0, [
                ref('project_task_type_subtask')
            ])]"
        />
    </record>

    <record id="project_task_type_new_feature" model="project.task.type2">
        <field name="name">New Feature</field>
        <field name="description">A new feature of the product, which has yet to be developed.</field>
        <field name="icon" type="base64" file="project_agile/static/img/type-new-feature.png"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_improvement" model="project.task.type2">
        <field name="name">Improvement</field>
        <field name="description">An improvement or enhancement to an existing feature or task.</field>
        <field name="icon" type="base64" file="project_agile/static/img/type-improvement.png"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_bug" model="project.task.type2">
        <field name="name">Bug</field>
        <field name="description">A problem which impairs or prevents the functions of the product.</field>
        <field name="allow_story_points" eval="False"/>
        <field name="icon" type="base64" file="project_agile/static/img/type-bug.png"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_story_item" model="project.task.type2">
        <field name="name">User Story Item</field>
        <field name="description">
            <![CDATA[
            An user story item is meant to be used by agile team to specify how will they implement user story.
            ]]>
        </field>
        <field name="allow_story_points" eval="False"/>
        <field name="allow_sub_tasks" eval="False"/>
        <field name="default_priority_id" ref="project_task_priority_major"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_story" model="project.task.type2">
        <field name="name">User Story</field>
        <field name="description">
            <![CDATA[
            An Agile user story is meant to be short, usually fitting on a sticky note or note card.
            The user stories should be written by the business in the language of the customer so that it is clear
            to both the business and the development team what the customer wants and why he wants it.
            The development team's job is to take care of how to develop the code that will satisfy the requirements of the user story.
            In best-case scenarios, developers collaborate closely with the business owners to clarify the details as the code gets developed.
            ]]>
        </field>
        <field name="icon" type="base64" file="project_agile/static/img/type-user-story.png"/>
        <field name="allow_sub_tasks" eval="True"/>
        <field name="type_ids" eval="[
            (6, 0, [
                ref('project_task_type_story_item')
            ])]"
        />
        <field name="default_priority_id" ref="project_task_moscow_priority_could_have"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_moscow_priority_must_have'),
                ref('project_task_moscow_priority_should_have'),
                ref('project_task_moscow_priority_could_have'),
                ref('project_task_moscow_priority_wont_have'),
            ])]"
        />
    </record>

    <record id="project_task_type_spike" model="project.task.type2">
        <field name="name">Spike</field>
        <field name="description">
            <![CDATA[
            A story or task aimed at answering a question or gathering information, rather than at producing shippable product.
            ]]>
        </field>
        <field name="allow_sub_tasks" eval="False"/>
        <field name="allow_story_points" eval="False"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_epic" model="project.task.type2">
        <field name="name">Epic</field>
        <field name="description">
            <![CDATA[
                An Agile epic is essentially a large user story that can be broken down into a number of smaller user stories.
            ]]>
        </field>
        <field name="icon" type="base64" file="project_agile/static/img/type-epic.png"/>
        <field name="allow_sub_tasks" eval="True"/>
        <field name="type_ids" eval="[
            (6, 0, [
                ref('project_task_type_task'),
                ref('project_task_type_story')
            ])]"
        />
        <field name="default_priority_id" ref="project_task_moscow_priority_could_have"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_moscow_priority_must_have'),
                ref('project_task_moscow_priority_should_have'),
                ref('project_task_moscow_priority_could_have'),
                ref('project_task_moscow_priority_wont_have'),
            ])]"
        />
    </record>

    <record id="project_task_type_change" model="project.task.type2">
        <field name="name">Change</field>
        <field name="description">Change Management ITIL Improvement</field>
        <field name="icon" type="base64" file="project_agile/static/img/type-change.png"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_access" model="project.task.type2">
        <field name="name">Access</field>
        <field name="description">Errors access / Can't access / Password Change.</field>
        <field name="icon" type="base64" file="project_agile/static/img/type-access.png"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_fault" model="project.task.type2">
        <field name="name">Fault</field>
        <field name="description">System Error Fault Problem</field>
        <field name="icon" type="base64" file="project_agile/static/img/type-fault.png"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_purchase" model="project.task.type2">
        <field name="name">Purchase</field>
        <field name="description">Track items that need to be bought.</field>
        <field name="icon" type="base64" file="project_agile/static/img/type-purchase.png"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>

    <record id="project_task_type_it_help" model="project.task.type2">
        <field name="name">IT Help</field>
        <field name="description">IT help Issue</field>
        <field name="icon" type="base64" file="project_agile/static/img/type-it-help.png"/>
        <field name="default_priority_id" ref="project_task_priority_minor"/>
        <field name="priority_ids" eval="[
            (6, 0, [
                ref('project_task_priority_blocker'),
                ref('project_task_priority_critical'),
                ref('project_task_priority_major'),
                ref('project_task_priority_minor'),
                ref('project_task_priority_trivial'),
            ])]"
        />
    </record>
</odoo>
